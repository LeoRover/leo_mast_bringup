#!/usr/bin/env python

import rospy
from std_msgs.msg import Float64
from std_srvs.srv import Trigger, TriggerResponse
from arbotix_msgs.srv import Relax

rospy.init_node("mast_controller")

mast_1_pub = rospy.Publisher("mast_1_joint/command", Float64, queue_size=5)
mast_2_pub = rospy.Publisher("mast_2_joint/command", Float64, queue_size=5)
mast_3_pub = rospy.Publisher("mast_3_joint/command", Float64, queue_size=5)

mast_1_relax = rospy.ServiceProxy("mast_1_joint/relax", Relax)

lifted = False

def lift(req):
    global lifted
    mast_1_pub.publish(Float64(0.0))

    res = TriggerResponse()
    if lifted:
        res.message = "Mast was already lifted"
        res.success = False
    else:
        rospy.sleep(2)
        lifted = True
        res.success = True

    return res  

def lower(req):
    global lifted

    res = TriggerResponse()

    if not lifted:
        res.message = "Mast was already lowered"
        res.success = False
    else:
        mast_1_pub.publish(Float64(1.5))
        mast_2_pub.publish(Float64(0.0))
        mast_3_pub.publish(Float64(0.0))

        rospy.sleep(2)

        mast_1_relax()

        lifted = False
        res.success = True

    return res
    
lift_srv = rospy.Service("mast/lift", Trigger, lift)
lower_srv = rospy.Service("mast/lower", Trigger, lower)

rospy.spin()